<%- include("templates/header") %>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    var link = document.createElement("link");
    link.rel = "preconnect";
    link.href = "https://fonts.googleapis.com";
    document.head.appendChild(link);

    var link2 = document.createElement("link");
    link2.rel = "preconnect";
    link2.href = "https://fonts.gstatic.com";
    link2.crossOrigin = "true";
    document.head.appendChild(link2);

    var link3 = document.createElement("link");
    link3.rel = "stylesheet";
    link3.href =
      "https://fonts.googleapis.com/css2?family=Alfa+Slab+One&display=swap";
    document.head.appendChild(link3);
  });
</script>
<div
  id="main-welcome-container"
  style="
    background: url(./hi.jpg) center / cover no-repeat;
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;

    height: 400px;
  "
>
  <form id="main-search-form" class="d-flex mx-auto" role="search">
    <div class="dropdown d-flex justify-content-center"></div>
    <button
      type="button"
      id="filter-button"
      class="btn btn-light dropdown-toggle"
      data-bs-toggle="dropdown"
      aria-expanded="false"
      data-bs-auto-close="outside"
    >
      <span class="material-symbols-outlined">filter_list</span>
    </button>
    <!-- Search bar text input -->
    <input
      id="search-text"
      class="form-control"
      type="search"
      placeholder="Search for services"
      aria-label="Search"
      aria-describedby="search-addon"
    />
    <!-- Search button -->
    <button id="search-button" class="btn btn-light" type="submit">
      <span class="material-symbols-outlined">search</span>
    </button>
  </form>

  <h1 class="app-name dance">
    <span id="span1" onclick="dow(1)">R</span>
    <span id="span2" onclick="re(2)">O</span>
    <span id="span3" onclick="mi(3)">B</span>
    <span id="span4" onclick="fa(4)">O</span>
    <span id="span5">&nbsp;</span>
    <span id="span6" onclick="sol()">R</span>
    <span id="span7" onclick="la()">E</span>
    <span id="span8" onclick="si()">N</span>
    <span id="span9" onclick="dow(9)">T</span>
    <span id="span10" onclick="re(10)">A</span>
    <span id="span11" onclick="mi(11)">L</span>
    <div onclick="animateRobo();" class="robo">
      <img style="padding: 10px; width: 100%" src="./roboto.png" alt="" />
    </div>
  </h1>
  <h2 id="main-welcome-message" style="color: white">
    &nbsp;Welcome <%= username %>!
  </h2>
</div>
<script>
  function dow(n) {
    document.getElementById(`span${n}`).style.color = "grey";

    let audio = new Audio("do.mp4");
    audio.currentTime = 0.5; // Start from the second second
    audio.play();

    setTimeout(() => {
      audio.pause();
      audio.currentTime = 0;
    }, 1500); // Stop the audio after 1 second

    setTimeout(() => {
      document.getElementById(`span${n}`).style.color = "";
    }, 2000);
  }

  function re(n) {
    document.getElementById(`span${n}`).style.color = "grey";

    let audio = new Audio("re.mp4");
    audio.currentTime = 0.5; // Start from the second second
    audio.play();

    setTimeout(() => {
      audio.pause();
      audio.currentTime = 0;
    }, 1500); // Stop the audio after 1 second

    setTimeout(() => {
      document.getElementById(`span${n}`).style.color = "";
    }, 2000);
  }

  function mi(n) {
    document.getElementById(`span${n}`).style.color = "grey";

    let audio = new Audio("mi.mp4");
    audio.currentTime = 0.5; // Start from the second second
    audio.play();

    setTimeout(() => {
      audio.pause();
      audio.currentTime = 0;
    }, 1500); // Stop the audio after 1 second

    setTimeout(() => {
      document.getElementById(`span${n}`).style.color = "";
    }, 2000);
  }
  function fa(n) {
    document.getElementById(`span${n}`).style.color = "grey";

    let audio = new Audio("fa1.mp4");
    audio.currentTime = 0.5; // Start from the second second
    audio.play();

    setTimeout(() => {
      audio.pause();
      audio.currentTime = 0;
    }, 1500); // Stop the audio after 1 second

    setTimeout(() => {
      document.getElementById(`span${n}`).style.color = "";
    }, 2000);
  }
  function sol() {
    document.getElementById("span6").style.color = "grey";

    let audio = new Audio("sol.mp4");
    audio.currentTime = 0.5; // Start from the second second
    audio.play();

    setTimeout(() => {
      audio.pause();
      audio.currentTime = 0;
    }, 1500); // Stop the audio after 1 second

    setTimeout(() => {
      document.getElementById("span6").style.color = "";
    }, 2000);
  }

  function la() {
    document.getElementById("span7").style.color = "grey";

    let audio = new Audio("la.mp4");
    audio.currentTime = 0.5; // Start from the second second
    audio.play();

    setTimeout(() => {
      audio.pause();
      audio.currentTime = 0;
    }, 1500); // Stop the audio after 1 second

    setTimeout(() => {
      document.getElementById("span7").style.color = "";
    }, 2000);
  }

  function si() {
    document.getElementById("span8").style.color = "grey";

    let audio = new Audio("si.mp4");
    audio.currentTime = 0.5; // Start from the second second
    audio.play();

    setTimeout(() => {
      audio.pause();
      audio.currentTime = 0;
    }, 1500); // Stop the audio after 1 second

    setTimeout(() => {
      document.getElementById("span8").style.color = "";
    }, 2000);
  }

  // Define a function to handle the animation
  function animateRobo() {
    const roboElement = document.querySelector(".robo");
    const evenSpans = document.querySelectorAll(".dance span:nth-child(2n)");
    const oddSpans = document.querySelectorAll(".dance span:nth-child(2n + 1)");

    var audio = new Audio("Welcome_to_Robo_Rent.mp4");
    audio.play();
    // Loop through each even span and add the class
    evenSpans.forEach(function (span) {
      span.classList.add("even-span");
    });

    oddSpans.forEach(function (span) {
      span.classList.add("odd-span");
    });

    // Add the animation class
    roboElement.classList.add("robocircle");

    // After the animation completes, remove the animation class
    setTimeout(() => {
      roboElement.classList.remove("robocircle");
      evenSpans.forEach(function (span) {
        span.classList.remove("even-span");
      });
      oddSpans.forEach(function (span) {
        span.classList.remove("odd-span");
      });
    }, 2000); // Adjust the timing (in milliseconds) to match the animation duration
  }
</script>
<!-- Section for AI -->
<div class="div-body">
  <div class="search-box">
    <button class="btn-search">
      <i class="fas fa-search"></i
      ><img src="chatbot.png" style="width: 30px; height: 30px" />
    </button>
    <input type="text" class="input-search" placeholder="Ask AI" />
  </div>
  <button class="btn-submit">Submit</button>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const searchBox = document.querySelector(".search-box");
    const submitButton = document.querySelector(".btn-submit");

    searchBox.addEventListener("mouseover", function () {
      submitButton.style.display = "block";
    });

    document.addEventListener("click", function (event) {
      if (
        !searchBox.contains(event.target) &&
        !submitButton.contains(event.target)
      ) {
        submitButton.style.display = "none";
      }
    });
  });
</script>
<!-- Services list of cards -->

<div id="main-service-list-container">
  <h3 style="position: relative; left: 10px; top: 10px" id="services-header">
    Find services:
  </h3>
  <hr />
  <div id="main-service-list-container-2" class="row mb-3 text-center service">
    <template id="ServiceCardTemplate">
      <div class="card cardi">
        <div class="card-bg cardi2 card-background"></div>
        <div class="card-body cardi3">
          <div>
            <!-- <h5 class="card-title">Card title</h5> -->
            <h6 class="card-subtitle mb-2 service-name"></h6>
            <p class="card-text service-description"></p>
            <p class="card-text service-price"></p>

            <a href="/station" class="link-arrow">Order Service</a>
          </div>
          <div>
            <form action="/stations" method="GET">
              <button
                style="float: right"
                type="submit"
                class="btn btn-outline-secondary fluid-button button-location"
              >
                <img
                  class=".hover-img fluid-image"
                  style="height: 30px"
                  src="/location.png"
                  alt=""
                />
              </button>
            </form>
          </div>
        </div>
      </div>
    </template>
  </div>
</div>

<div class="callout callout--primary">
  <div class="grid grid--1x2">
    <div class="callout__content">
      <h2 class="callout__heading">Get Started As a Business Owner?</h2>
      <p>
        This could be a good chance to enroll for becomming a business Owner
        You'd get the chance to Provide robots for our stations and and take
        advantage of being payed.
      </p>
    </div>
    <form class="form-class" action="/bussinessOwnerForm" method="GET">
      <button type="submit" class="btn1">Get Started</button>
    </form>
  </div>
</div>

<script>
  const services = <%- JSON.stringify(services) %>;
  console.log(services);
</script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    var link = document.createElement("link");
    link.rel = "stylesheet";
    link.href = "/main.css";
    document.head.appendChild(link);
  });

  // console.log('services:', services);

  document.addEventListener("DOMContentLoaded", function () {
    // Get references to the search input and icon
    const searchInput = document.getElementById("search-text");
    const searchIcon = document.getElementById("search-button");

    // Add event listener to the search icon for click events
    searchIcon.addEventListener("click", function (event) {
      // console.log("clicked");
      event.preventDefault(); // Prevent default action (e.g., form submission)

      // Get the search query from the input field
      const query = searchInput.value;
      // console.log(query);

      // Send a POST request to the server
      fetch("/search", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ query: query }),
      })
        .then((response) => response.json())
        .then((data) => {
          data.result.forEach((item) => {
            // console.log(item.name);
            // console.log(item.description);
            // console.log(item.background);
          });

          renderServices(data);
        })
        .catch((error) => {
          console.error("Error sending search request:", error);
        });
    });
  });
  function renderServices(filteredServices) {
    const servicesContainer = document.getElementById(
      "main-service-list-container-2"
    );
    // console.log(servicesContainer);
    // servicesContainer.innerHTML = "";
    const cards = document.querySelectorAll(".card");
    cards.forEach((card) => {
      card.remove();
      // console.log('removed');
    });
    if (filteredServices.result.length == 0) {
      const notFound = document.createElement("div");
      notFound.textContent = "not found";
      document
        .getElementById("main-service-list-container-2")
        .appendChild(notFound);
    }
    filteredServices.result.forEach((service) => {
      let name = service.name;
      let description = service.description;
      let background = service.background;
      let serviceID = service._id;

      newcard = document
        .getElementById("ServiceCardTemplate")
        .content.cloneNode(true);

      newcard.querySelector(".service-name").innerHTML = name;
      newcard.querySelector(".service-description").innerHTML = description;
      newcard.querySelector(
        ".card-background"
      ).style.backgroundImage = `url(${background})`;

      newcard.querySelector(".button-location").id =
        "button-location-" + serviceID;
      newcard.querySelector(".button-location").onclick = () =>
        setID(serviceID, name);

      document
        .getElementById("main-service-list-container-2")
        .appendChild(newcard);
    });
    function setID(id, name) {
      localStorage.setItem("ServiceID", id);
      localStorage.setItem("ServiceName", name);
    }
  }
</script>
<script src="/main.js"></script>
<%- include("templates/footer") %>

<!-- 
finish the main page
	- create welcome container with search bar - with an appropriate colours that we chose from coolors
	- create container for the available robot services to be dynamically displayed in
	- create a file for template cards to be cloned from in the main page
	- create a placeholder for the AI assistance button, which we shayan and I will implement next week
 -->
